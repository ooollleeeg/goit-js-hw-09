{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXMO,SAASC,cAAc,SAgC/BC,iBAAiB,UAjBtB,SAAqBC,GACnBA,EAAEC,iBAIF,IAHA,IAAIC,EAAaC,OAAOH,EAAEI,OAAOd,MAAMe,OACnCC,EAAYH,OAAOH,EAAEI,OAAOG,KAAKF,OACjCG,EAAcL,OAAOH,EAAEI,OAAOK,OAAOJ,OAChCK,EAAI,EAAGA,EAAIF,EAAaE,IAC/BtB,EAAcsB,EAAI,EAAGR,GAClBS,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,M,OACjBJ,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAJ,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,M,OAClBJ,EAAA2B,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9DY,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction callPromise(e) {\n  e.preventDefault();\n  let delayValue = Number(e.target.delay.value);\n  let stepValue = Number(e.target.step.value);\n  let amountValue = Number(e.target.amount.value);\n  for (let i = 0; i < amountValue; i++) {\n    createPromise(i + 1, delayValue)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    delayValue += stepValue;\n  }\n}\n\nform.addEventListener('submit', callPromise);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","delayValue","Number","target","value","stepValue","step","amountValue","amount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f9f55386.js.map"}